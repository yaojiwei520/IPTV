name: IPTV 数据自动更新与清洗

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  update_and_clean:
    runs-on: ubuntu-latest
    permissions:
      contents: write 

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 拉取、去重并合并数据
        id: process_data
        run: |
          SOURCE_URL="https://raw.githubusercontent.com/hujingguang/ChinaIPTV/main/cnTV_AutoUpdate.m3u8"
          TEMP_FILE="downloaded_data.m3u8"
          CLEANED_FILE="cnTV_AutoUpdate.m3u"
          TARGET_FILE="iptv.m3u"
          CHANNELS_TO_KEEP='湖南爱晚|湖南娱乐频道|金鹰卡通|湖南国际频道|dianshiju.hunan|长沙新闻频道|湖南经视'
          
          # 1. 下载源数据
          curl -s $SOURCE_URL -o $TEMP_FILE
          if ! grep -q '#EXTM3U' $TEMP_FILE; then echo "need_commit=false" >> $GITHUB_OUTPUT; exit 1; fi

          # 2. 清洗并过滤需要保留的频道
          echo "#EXTM3U" > $CLEANED_FILE
          awk -v channels="$CHANNELS_TO_KEEP" '
            BEGIN { FS=","; OFS=","; is_keep=0 }
            /^#EXTM3U/ { next } 
            /^#EXTINF/ {
              if ($0 ~ channels) { print $0 >> "'"$CLEANED_FILE"'"; is_keep = 1; } else { is_keep = 0; }
            }
            !/^#/ && is_keep { print $0 >> "'"$CLEANED_FILE"'"; is_keep = 0; }
          ' $TEMP_FILE

          # 3. 如果没有有效数据则退出
          if [[ $(wc -l < "$CLEANED_FILE") -le 1 ]]; then echo "need_commit=false" >> $GITHUB_OUTPUT; exit 0; fi

          # 4. 创建临时工作文件
          TEMP_WORK_FILE="temp_working_file.m3u"
          echo "#EXTM3U" > $TEMP_WORK_FILE

          # 5. 如果目标文件不存在则创建
          if [ ! -f "$TARGET_FILE" ]; then echo "#EXTM3U" > $TARGET_FILE; fi

          # 6. 从目标文件中移除与清洗文件重复的内容
          awk '
            BEGIN { in_block = 0; is_duplicate = 0 }
            NR == FNR {
              if (/^#EXTINF/) { current_header = $0; next }
              if (/^http/) { url_map[current_header] = $0 }
              next
            }
            /^#EXTINF/ {
              current_header = $0
              if ($0 in url_map) { is_duplicate = 1; next }
              in_block = 1; print $0; next
            }
            /^http/ {
              if (!is_duplicate && in_block) { print $0 }
              in_block = 0; is_duplicate = 0
            }
            !/^#EXTINF|^http/ { if (in_block && !is_duplicate) print $0 }
          ' "$CLEANED_FILE" "$TARGET_FILE" >> "$TEMP_WORK_FILE"

          # 7. 将清洗后的新内容追加到工作文件
          tail -n +2 "$CLEANED_FILE" >> "$TEMP_WORK_FILE"

          # 8. 替换原文件
          mv "$TEMP_WORK_FILE" "$TARGET_FILE"

          echo "need_commit=true" >> $GITHUB_OUTPUT

      - name: 记录版本日志
        if: steps.process_data.outputs.need_commit == 'true'
        run: |
          LOG_FILE="VersionLog.md"
          CURRENT_TIME=$(TZ='Asia/Shanghai' date +'%a %b %d %r CST %Y')
          LOG_ENTRY="\n更新时间: ${CURRENT_TIME}\n"
          
          if [ ! -f "$LOG_FILE" ]; then
            echo "# 版本更新日志" > $LOG_FILE
            echo "" >> $LOG_FILE
            echo "记录每次 GitHub Actions 自动更新的时间线。" >> $LOG_FILE
          fi
          
          sed -i "3i\\${LOG_ENTRY}" $LOG_FILE

      - name: 提交所有更新文件
        if: steps.process_data.outputs.need_commit == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🤖 [Actions] 自动更新并合并 IPTV 数据"
          file_pattern: '*.m3u *.m3u8 VersionLog.md'
          commit_author: 'GitHub Actions <actions@github.com>'
